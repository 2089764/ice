#!/bin/bash
SCRIPT_DIR=$( cd $( dirname ${BASH_SOURCE[0]} ) && pwd )
TPL_DIR="$SCRIPT_DIR/../template/daemon"

source $TPL_DIR/build.conf

PROJECT_ROOT_DIR="$OUTPUT_DIR"
PROJECT_SRC_DIR="$PROJECT_ROOT_DIR/src"

read -r -d '' FILE_MAPPING <<EOL
$TPL_DIR/tpl_cli.php:$PROJECT_SRC_DIR/daemon/cli.php
$TPL_DIR/tpl_conf_app.php:$PROJECT_SRC_DIR/conf/app.php
$TPL_DIR/tpl_action_Say_Hello.php:$PROJECT_SRC_DIR/daemon/Say/Hello.php
$TPL_DIR/tpl_composer.json:$PROJECT_ROOT_DIR/composer.json
EOL


function ui_make_dir_tree() {
    mkdir -p "$PROJECT_ROOT_DIR/var"
    chmod 777 "$PROJECT_ROOT_DIR/var"
    mkdir -p "$PROJECT_SRC_DIR/daemon/Say"
    mkdir -p "$PROJECT_SRC_DIR/conf"
    mkdir -p "$PROJECT_SRC_DIR/lib"
}

function ui_cp_files() {
    echo "$FILE_MAPPING" | awk -F':' '{print "cp -rf "$1" "$2;}' | bash
}

function ui_replace_info() {
    PENDING_REPLACED_FILES=$(echo "$FILE_MAPPING" | awk -F':' '{printf "%s ", $2;}')
    sed -i "s;\${PROJECT_GROUP};${PROJECT_GROUP};g" $PENDING_REPLACED_FILES
    sed -i "s;\${PROJECT_NAME};${PROJECT_NAME};g" $PENDING_REPLACED_FILES
    sed -i "s;\${PROJECT_NAMESPACE};${PROJECT_NAMESPACE};g" $PENDING_REPLACED_FILES
    sed -i "s;\${PROJECT_NAMESPACE_ESCAPE};${PROJECT_NAMESPACE_ESCAPE};g" $PENDING_REPLACED_FILES
    sed -i "s;\${PROJECT_ROOT_DIR};${PROJECT_ROOT_DIR};g" $PENDING_REPLACED_FILES
}

function ui_composer_init() {
    cd $PROJECT_ROOT_DIR
    composer update -vvv
    cd -
}

rm -rf $OUTPUT_DIR

ui_make_dir_tree

ui_cp_files

ui_replace_info

ui_composer_init
